---
- name: Check for ngrok
  stat: path=/vagrant/ngrok_2.0.19_linux_amd64.zip
  register: ngrok
- name: Get ngrok
  get_url: url=https://dl.ngrok.com/ngrok_2.0.19_linux_amd64.zip dest=/vagrant
  when: ngrok.stat.exists == False
- name: Unpack ngrok
  unarchive: src=/vagrant/ngrok_2.0.19_linux_amd64.zip dest=/vagrant/ copy=no
  when: ngrok.stat.exists == False
- name: Check for ngrok config
  stat: path=/home/vagrant/.ngrok2/ngrok.yml
  register: ngrok_config
- name: Configure ngrok
  sudo_user: vagrant
  shell: /vagrant/./ngrok authtoken "{{ ngrok_authtoken }}"
- name: Check for ngrok process
  sudo: yes
  command: pgrep ngrok
  ignore_errors: yes
  register: ngrok_pid
- name: Start ngrok
  sudo_user: vagrant
  shell: nohup /vagrant/./ngrok http 80 --log ngrok.log --log-level debug --log-format "json" & chdir=/home/vagrant
  when: ngrok_pid.stdout == ""
- name: Grab ngrok hostname
  sudo_user: vagrant
  shell: grep Hostname /home/vagrant/ngrok.log | tail -1 |  cut -d ':' -f 8 | cut -d ' ' -f 1 | xargs
  register: ngrok_hostname
- name: Vagrant-specific apache ServerName
  lineinfile: dest=/etc/httpd/conf.d/template_init_oulib_drupal state=absent line='ServerName __SITE_DIR__.ou.edu'
- name: Access
  debug: msg="http://{{ ngrok_hostname.stdout }}"
- name: Access
  debug: msg="https://{{ ngrok_hostname.stdout }}"
