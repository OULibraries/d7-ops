---
  - name: Check Timezone
    shell: >
      timedatectl status | grep Timezone: | cut -d ':' -f 2 | cut -d '(' -f 1 | xargs
    always_run: yes
    register: timezone
    changed_when: timezone.stdout != "{{ server_timezone }}"
    notify:
    - Set timezone
  - include: user-config-tasks.yml
  - name: Give vagrant user passwordless sudo
    lineinfile: "dest=/etc/sudoers line='vagrant ALL=(ALL) NOPASSWD: ALL' validate='visudo -cf %s'"
  - name: Disable requiretty for sudo
    lineinfile: "dest=/etc/sudoers state=present regexp='^Defaults    requiretty$' line='#Defaults    requiretty' validate='visudo -cf %s'"
  - name: Ensure vagrant user has the /vagrant directory
    file: path=/vagrant state=directory mode=0775 owner=vagrant group=wheel
  - name: Ensure vagrant user has the .ssh directory
    sudo_user: vagrant
    file: path=/home/vagrant/.ssh state=directory mode=0700 owner=vagrant group=vagrant
  - name: Ensure .ssh/known_hosts exists for vagrant
    sudo_user: vagrant
    file: path=/home/vagrant/.ssh/known_hosts state=touch mode=0600 owner=vagrant group=vagrant
  - name: Ensure .ssh/config exists for vagrant
    file: path=/home/vagrant/.ssh/config state=touch mode=0700 owner=vagrant group=vagrant
  - name: Ensure correct .ssh/config settings for vagrant
    sudo_user: vagrant
    lineinfile:
      dest: /home/vagrant/.ssh/config
      line: "{{ item.line }}"
    with_items:
      - { line: 'host github.com' }
      - { line: 'User git' }
      - { line: 'IdentityFile ~/.ssh/libdev_rsa' }
#  - name: Ensure vagrant user has private machine key
#    copy: src=libdev_rsa dest=/home/vagrant/.ssh/ owner=vagrant group=vagrant mode=0600
#  - name: Ensure vagrant user has public machine key
#    copy: src=libdev_rsa.pub dest=/home/vagrant/.ssh/ owner=vagrant group=vagrant mode=0600
  - name: Ensure .ssh/known_hosts exists for libacct
    sudo_user: libacct
    file: path=/home/libacct/.ssh/known_hosts state=touch mode=0600 owner=libacct group=libacct
  - name: Ensure .ssh/config exists for libacct
    file: path=/home/libacct/.ssh/config state=touch mode=0700 owner=libacct group=libacct
  - name: Ensure correct .ssh/config settings for libacct
    sudo_user: libacct
    lineinfile:
      dest: /home/libacct/.ssh/config
      line: "{{ item.line }}"
    with_items:
      - { line: 'host *' }
      - { line: 'ForwardAgent yes' }
  - name: Get github ssh fingerprints.
    command: ssh-keyscan github.com
    register: git_fingerprints
  - name: Add fingerprints to vagrant ssh known_hosts.
    sudo_user: vagrant
    lineinfile:
      dest: /home/vagrant/.ssh/known_hosts
      line: "{{ git_fingerprints.stdout }}"
  - name: Add fingerprints to libacct ssh known_hosts.
    sudo_user: libacct
    lineinfile:
      dest: /home/libacct/.ssh/known_hosts
      line: "{{ git_fingerprints.stdout }}"
  - name: Packages for yum.
    yum: name={{ item }} state=present
    with_items:
    - deltarpm
    - yum-priorities
    ## Specifying version to avoid package conflict
    - yum-3.4.3-125.el7.centos.noarch
  - name: yum-cron set for security updates
    lineinfile: "dest=/etc/yum/yum-cron.conf state=present regexp='^update_cmd = default$' line='update_cmd = security'"
  - name: yum-cron enabled
    lineinfile: "dest=/etc/yum/yum-cron.conf state=present regexp='^apply_updates = no$' line='apply_updates = yes'"
  - name: CentOS-Base has priority
    ini_file:
      dest: /etc/yum.repos.d/CentOS-Base.repo
      section: base
      option: priority
      value: 1
      backup: yes
  - name: CentOS-Updates has priority
    ini_file:
      dest: /etc/yum.repos.d/CentOS-Base.repo
      section: updates
      option: priority
      value: 1
      backup: yes
  - name: Utility packages.
    yum: name={{ item }} state=present
    with_items:
    - epel-release
    - python-pip
    - nload
    - htop
    - sysstat
    - psmisc
    - iotop
    - policycoreutils-python
    - git
    - wget
    - curl
    - tree
    - emacs-nox
    - vim
    - ack
    - tmux
    - screen
    - unzip
  - name: Security updates
    command: yum -y update --security
  - name: Ensure /usr/local belongs to root:wheel 0775
    file: path=/usr/local state=directory mode=0775 owner=root group=wheel recurse=yes
  - name: Ensure /opt belongs to root:wheel 0775
    file: path=/opt state=directory mode=0775 owner=root group=wheel recurse=yes
